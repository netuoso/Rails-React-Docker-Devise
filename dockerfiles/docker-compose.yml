version: '3.8'

services:
  backend:
    build:
      context: ../src/backend
      dockerfile: Dockerfile.dev
    command: ["/bin/bash", "-c", "./wait-for-services.sh bundle exec rails server -b 0.0.0.0 -p 3000"]
    ports:
      - "3000:3000"
    volumes:
      - ../src/backend:/app
      - ../src/backend/wait-for-services.sh:/app/wait-for-services.sh
    environment:
      - RAILS_ENV=development
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379/0
      - SIDEKIQ_USERNAME=admin
      - SIDEKIQ_PASSWORD=password
    depends_on:
      - db
      - redis
    networks:
      - app-network

  sidekiq:
    build:
      context: ../src/backend
      dockerfile: Dockerfile.dev
    command: ["/bin/bash", "-c", "./wait-for-services.sh bundle exec sidekiq"]
    volumes:
      - ../src/backend:/app
      - ../src/backend/wait-for-services.sh:/app/wait-for-services.sh
    environment:
      - RAILS_ENV=development
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - app-network

  frontend:
    build:
      context: ../src/frontend
      dockerfile: Dockerfile
    command: npm start
    ports:
      - "3001:3000"
    volumes:
      - ../src/frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=3001
      - WDS_SOCKET_PATH=/ws
    networks:
      - app-network

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=backend_development
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
